---
import DynamicButton from "@/components/elements/DynamicButton/DynamicButton.astro";
type Props = {
  variant?: "contained" | "outlined";
  full?: boolean;
  fit?: boolean;
  disabled?: boolean;
  href?: string;
};

const { variant = "contained", full, fit, disabled, ...attrs } = Astro.props;
---

<DynamicButton
  class:list={[
    "BasicButton",
    `variant-${variant}`,
    { disabled: disabled },
    { full: full },
    { fit: fit },
  ]}
  {...attrs}
>
  <slot />
</DynamicButton>
<style lang="scss" scoped>
  // $primary: #fcf9cd;
  $primary: #f8ef6f;
  $font-color: #063f5c;
  $disabled-color: #cbcbcb;
  $border-width: 2px;
  .BasicButton {
    border: $border-width solid var(--bs-primary);
    display: grid;
    width: 100%;
    max-width: 25rem;
    padding: 0.5rem 1rem;
    font-weight: bold;
    text-align: center;

    &.variant {
      &-contained {
        background-color: var(--bs-primary);
        transition: background-color 0.3s ease-in-out;
        color: #ffffff;

        &:hover {
          background-color: lighten($color: #323232, $amount: 20);
        }

        &.disabled {
          color: darken($color: $disabled-color, $amount: 40);
          background-color: $disabled-color;
          border: solid $border-width $disabled-color;
          cursor: not-allowed;
        }
      }

      &-outlined {
        background-color: transparent;
        transition: background-color 0.3s ease-in-out;
        color: $font-color;

        &:hover {
          background-color: lighten($color: #323232, $amount: 25);
        }

        &.disabled {
          color: darken($color: $disabled-color, $amount: 10);
          border: solid $border-width $disabled-color;

          &:hover {
            background-color: transparent;
            cursor: not-allowed;
          }
        }
      }
    }

    &.full {
      max-width: none;
    }

    &.fit {
      width: auto;
    }
  }
</style>
